<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:documentation>
	<aura:description>
		<p>
			 A <code>ui:inputSelect</code> component is rendered as an HTML <code>select</code> element. It contains options, represented by the <code>ui:inputSelectOption</code> components. To enable multiple selections, set <code>multiple="true"</code>.
			 To wire up any client-side logic when an input value is selected, use the <code>change</code> event. 
		</p>
<pre>&lt;ui:inputSelect class="single" aura:id="InputSelectSingle" change="{!c.onSingleSelectChange}">
        &lt;ui:inputSelectOption text="Tiger"/>
        &lt;ui:inputSelectOption text="Lion" value="true"/>
        &lt;ui:inputSelectOption text="Bear"/>
        &lt;ui:inputSelectOption text="Butterfly"/>
        &lt;ui:inputSelectOption text="Dragonfly"/>
&lt;/ui:inputSelect></pre>		
		<h4>Generating Options Dynamically</h4>
		<p>
			<code>ui:inputSelect</code> does not support the use of <code>aura:iteration</code> in its body. To generate options dynamically, you can load the options on the controller-side action.
		</p>
		<pre>
&lt;aura:component>
    &lt;aura:handler name="init" value="{!this}" action="{!c.doInit}"/>
    &lt;ui:inputSelect label="Select me:" class="dynamic" aura:id="InputSelectDynamic"/>
&lt;/aura:component>
		</pre>
		<p>
			The following client-side controller generates options using the options attribute on the <code>ui:inputSelect</code> component. <code>v.options</code> takes in the list of objects and converts them into list options.
			The <code>opts</code> object constructs <code>InputOption</code> objects to create the <code>ui:inputSelectOptions</code> components within <code>ui:inputSelect</code>. 
			Although the sample code generates the options during initialization, the list of options can be modified anytime when you manipulate the list in <code>v.options</code>. The component automatically updates itself and rerenders with the new options.
		</p>
		<pre>
({
    doInit : function(cmp) {
        var opts = [
            { class: "optionClass", label: "Option1", value: "opt1", selected: "true" },
            { class: "optionClass", label: "Option2", value: "opt2" },
            { class: "optionClass", label: "Option3", value: "opt3" }
           
        ];
        cmp.find("InputSelectDynamic").set("v.options", opts);
    }
})		
		</pre>
		<p><code>class</code> is a reserved keyword that might not work with older versions of Internet Explorer. We recommend using <code>"class"</code> with double quotes.</p>
		
		
	</aura:description>	
		<aura:example name="inputselect" ref="auradocs:demoSelect" label="Using ui:inputSelect">
    	<p>This example shows several ways to implement <code>ui:inputSelect</code>.</p>
    	
	</aura:example>
	
</aura:documentation>
