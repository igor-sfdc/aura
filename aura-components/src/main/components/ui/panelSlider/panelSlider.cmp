<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component description="A panel with a button for sliding. Use ui:panelManager to manage your panel sliders.">

    <aura:attribute name="isModal" type="Boolean" default="true" description="Instanciate modal or panel"/>
    <aura:attribute name="isVisible" type="Boolean" default="false" description="Is visible"/>
    <aura:attribute name="class" type="String" default="" description="Additional css classes"/>
    <aura:attribute name="slideFrom" type="String" default="right" description="Animation to apply (right || left)"/>
    <aura:attribute name="icon" type="Aura.Component[]" description="Icon component for slide in or slide out." />
    <aura:attribute name="buttonComponent" type="Aura.Component[]" required="false" description="Optional button components."/>
    <aura:attribute name="buttonColor" default="" type="String" required="false" description="CSS color for the button"/>
    <aura:attribute name="buttonClass" default="" type="String" required="false" description="Optional button class name."/>
    <aura:attribute name="closeOnModalClick" type="Boolean" default="true" description="Animation to apply"/>
    <aura:attribute name="escToClose" type="Boolean" default="true" description="Animation to apply"/>
    <aura:attribute name="panelOutAltText" type="String" default="Show panel" description="Alt text for icon when panel is open/slide out for accessibility"/>
    <aura:attribute name="panelInAltText" type="String" default="Hide panel" description="Alt text for icon when panel is closed for accessibility"/>
    <aura:attribute name="iconAltText" type="String" default="Slide panel" description="Icon alt text in panel"/>
    <aura:attribute name="iconTransformation" type="String" description="Css transformation on icon e.g flip,rotate or any other custom"/>
    <aura:attribute name="isTransient" type="Boolean" default="false" description="Flag to indicate if panel is one-time use and should be destroyed when hidden"/>
    
    <aura:handler name="init" value="{!this}" action="{!c.init}"/>
    <aura:registerEvent name="panelDoneRendering" type="ui:panelDoneRendering"/>
    <aura:registerEvent name="panelTransitionEnd" type="ui:panelTransitionEnd" description="Fires after the panel finishes a tranisition"/>
    
    <aura:dependency resource="markup://ui:panelTransitionBegin" type="EVENT" />
    <aura:dependency resource="markup://ui:panelTransitionEnd" type="EVENT" />
    
    <div class="{!($Browser.formFactor == 'PHONE' ? 'phone':'tablet') + (v.isModal ? ' modal ' : ' ') + v.class}">
         <aura:if isTrue="{!v.isModal}">
         	<a onclick="{!c._onWrapperClick}" href="javascript:void(0)">
         		<div aura:id='modal-glass' class="modal-glass sliding">
					<span class="assistiveText">{!v.panelInAltText}</span>
         		</div>
         	</a>
   	 	</aura:if>
    	 
    	<a aura:id='panel' 
            class="{!($Browser.isPhone ? 'phone' : 'tablet') +' sliderWrapper ' + (v.slideFrom + 'Position sliding ') + v.class}" 
             role="dialog">
    		<a aura:id="button" class="{!v.buttonClass + ' sliding button'}"  onclick="{!c.toggleSlide}" style="{! v.buttonColor != null ? 'background-color: ' + v.buttonColor : ''}">
    			<aura:if isTrue="{!v.buttonComponent.length &gt; 0}">
    			     {!v.buttonComponent}
	    			<aura:set attribute="else">
	    			    <aura:if isTrue="{!v.icon.length &gt; 0}" >
	    				    {!v.icon}
	    				    <aura:set attribute="else">
	    				       <span class="assistiveText">{!v.iconAltText}</span>
	    				    </aura:set>
	    				</aura:if>
	    			</aura:set>
    			</aura:if>
    		</a>
    		<!-- aria-hidden attr toggled programatically when panel slides into and out of view -->
    		<div aura:id="body" class="body" aria-hidden="true">
    			{!v.body}
    		</div>
    	</a>
    </div>
</aura:component>
