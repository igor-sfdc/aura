<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extensible="true" extends="ui:interactive" description="A trigger that expands and collapses a menu, used in a ui:menu component." support="PROTO">
    <aura:attribute name="title" type="String" default="" description="The text to display as a tooltip when the mouse pointer hovers over this component."/>
    <aura:attribute name="trigger" type="Aura.Component[]" description="Used to override the default HTML and trigger event handling. If used, developer must trigger show/hide events for popup target since v.trigger is not wrapped in a link tag, it is wrapped in a plain div." />
    <aura:attribute name="stopClickPropagation" type="Boolean" default="false" description="Prevents the click event from bubbling up the DOM tree, preventing any parent handlers from being notified of the event."/>

    <aura:registerEvent name="popupTriggerPress" type="ui:popupTriggerPress" description="The event fired when a popup trigger is pressed."/>
    <aura:registerEvent name="popupTargetShow" type="ui:popupTargetShow" description="The trigger fires this event to show the target."/>
    <aura:registerEvent name="popupTargetHide" type="ui:popupTargetHide" description="The trigger fires this event to hide the target."/>
    <aura:handler event="ui:popupTargetToggle" action="{!c.onPopupToggle}" />

    <div id="{!globalId}" aura:id="popupTrigger" aria-haspopup="true" class="{!v.class}">
	    <aura:if isTrue="{!v.trigger.length > 0}">
	    	<div aura:id="popupTriggerElement">
	    		{!v.trigger}
	    	</div>

	    	<aura:set attribute="else">
	    		<a aura:id="popupTriggerElement" title="{!v.title}" onclick="{!c.onClick}">
			    	<aura:if isTrue="{!v.label != null}">
			    		{!v.label}
			    		<aura:set attribute="else">
			    			{!v.body}
			    		</aura:set>
			    	</aura:if>
			    	<span class="assistiveText">{!v.title}</span>
		    	</a>
	    	</aura:set>
	    </aura:if>
	</div>
</aura:component>