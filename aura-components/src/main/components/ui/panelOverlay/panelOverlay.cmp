<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component description="A panel for full-screen overlays. Use ui:panelManager to manage your panel overlays.">

    <aura:attribute name="class" type="String" default="" description="Additional css classes"/>
    <aura:attribute name="animation" type="String" default="bottom" description="Animation to apply"/>
    <aura:attribute name="removeHeader" type="Boolean" default="false" description="Render the header if not false"/>
    <aura:attribute name="headerButtons" type="Aura.Component[]" description="buttons to add to the header of the window"/>
    <aura:attribute name="startOfDialogLabel" type="String" default="Start of Dialog" description="Assistive text for start of dialog." />
	<aura:attribute name="title" type="String" description="the title of the window"/>
    <aura:attribute name="titleDisplay" type="Boolean" default="true" description="The title of the window can be shown/hidden for accessibility"/>
    <aura:attribute name="visible" type="Boolean" default="false" description="Should show on render?"/>
    <aura:attribute name="autoFocus" type="Boolean" default="true" description="Automatically focus on the first focusable element"/>
    <aura:attribute name="isTransient" type="Boolean" default="true" description="Flag to indicate if panel is one-time use and should be destroyed when hidden"/>
    <aura:attribute name="lastFocusedInput" type="Object" description="The last element within the panel to receive input focus."/>
    <aura:attribute name="isFullScreen" type="Boolean" default="true" description="Indicates whether full screen is used on non-phone devices"/>
    
    <!-- supported callbacks: onClose -->
    <aura:attribute name="callbacks" type="Object" description="Option callbacks that can be set when creating a new panel through the panelManager." />
    
	<!-- private attributes -->
    <aura:attribute name="priv_focusHandler" type="Object" description="Private attribute. Reference to the closure for focus handling"/>
    
    <aura:registerEvent name="panelDoneRendering" type="ui:panelDoneRendering"/>
    <aura:handler name="change" value="{!v.visible}" action="{!c.onVisibleChange}" />
    
    <aura:dependency resource="markup://ui:panelTransitionBegin" type="EVENT" />
    <aura:dependency resource="markup://ui:panelTransitionEnd" type="EVENT" />
    <aura:dependency resource="markup://ui:updateSize" type="EVENT" />

    <div class="{!((v.isFullScreen||$Browser.formFactor == 'PHONE') ? ' fullScreen ' : ' notFullScreen ') + v.class}">

        <aura:if isTrue="{!!v.isFullScreen &amp;&amp; $Browser.formFactor != 'PHONE'}">
            <div aura:id='modal-glass' class="modal-glass" ></div>
        </aura:if>

        <div aura:id='panel'
             class="{! 'panel panelOverlay ' + ($Browser.isWindowsPhone ? 'wp ' : '') + $Browser.formFactor + ' ' + (v.removeHeader ? 'customHeader ' : '')}"
             role="dialog"
             aria-labeled-by="{!'title_' + globalId}"
             style="display:none">

            <div role="document">
                <!--Render the header if the title is present and removeHeader option is not set -->
                <aura:renderIf isTrue="{! !v.removeHeader }">
                    <ui:header class="titleBar">
                        <aura:if isTrue="{!v.assistiveLabel != null}">
                            <span class="assistiveText">{!v.startOfDialogLabel}</span>
                        </aura:if>
                        <div class="titles">
                            <h2 id="{!'title_' + globalId}" class="{!(v.titleDisplay ? 'title' : 'assistiveText')}">{!v.title}</h2>
                        </div>
                        <aura:renderIf isTrue="{!v.headerButtons.length > 0}">
                            {!v.headerButtons}
                        </aura:renderIf>
                    </ui:header>
                </aura:renderIf>

                <div class="{! 'body ' + (v.body.length == 0 ? 'hidden' : '') }">
                    {!v.body}
                </div>
            </div>
        </div>
    </div>
</aura:component>
