<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component access="GLOBAL" support="GA" extends="ui:inputTextArea" extensible="true" description="An input field for entering rich text.">

    <aura:clientLibrary name="CkEditor" type="JS" />

	<aura:attribute name="toolbar" type="String" default="basic" description="Specify the toolbar config to be used. Possible values: standard, full, email. Default value is &quot;basic&quot;. Custom config can be added in inputRichTextHelper."/>
	<aura:attribute name="toolbarLocation" type="String" default="top" description="Location of the toolbar. Possible options are &quot;top&quot; and &quot;bottom&quot;." /> 
	 
	<aura:attribute access="GLOBAL" name="width" type="String"  description="The editor UI outer width. This can be an integer, for pixel sizes, or any CSS-defined unit. If isRichText is set to false, use the cols attribute instead." />
	<aura:attribute access="GLOBAL" name="height" type="String" default="200" description="The height of the editing area (that includes the editor content). This can be an integer, for pixel sizes, or any CSS-defined length unit." />
	
	<aura:attribute name="isRichText" type="Boolean" default="true" description="Indicates if the input is in rich text or plain text. If set to false, a text area replaces the rich text editor." />	
	
 	<aura:handler event="ui:toggleRichText" action="{!c.toggle}" description="Handler for ui:toggleRichText event" />
 	 
     <aura:renderif isTrue="{!v.body.length == 0}">
        <textarea aura:id="textAreaElem"
            id="{!v.domId}"
            class="{!v.class+(v.resizable?'':' noresize')}"
            cols="{!v.cols}"
            rows="{!v.rows}"
            disabled="{!v.disabled}"
            readonly="{!v.readonly}"
            maxlength="{!v.maxlength}"
            placeholder="{!v.placeholder}"
            aria-describedby="{!v.ariaDescribedBy}"/>
        <aura:set attribute="else">
            {!v.body}
        </aura:set>
    </aura:renderif>
    
</aura:component>
