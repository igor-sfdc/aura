<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:documentation>
	<aura:description>
            <p>
	        To toggle the spinner, use <code>get("e.toggle")</code>, set the <code>isVisible</code> parameter to <code>true</code> or <code>false</code>, and then fire the event.
	    </p>
	    <p>This example shows a spinner when a component is expecting a server response and removes the spinner when the component is no longer waiting for a response.</p>
<pre>&lt;aura:component>
    &lt;aura:handler event="aura:waiting" action="{!c.showSpinner}"/>
    &lt;aura:handler event="aura:doneWaiting" action="{!c.hideSpinner}"/>
   
   &lt;center>&lt;ui:spinner aura:id="spinner"/>&lt;/center>
&lt;/aura:component></pre>
	<p>This client-side controllers shows and hides the spinner accordingly.</p>
<pre>({
     showSpinner : function (component, event, helper) {
        var spinner = component.find('spinner');
        var evt = spinner.get("e.toggle");
        evt.setParams({ isVisible : true });
        evt.fire();    
    },
    
    hideSpinner : function (component, event, helper) {
       var spinner = component.find('spinner');
       var evt = spinner.get("e.toggle");
       evt.setParams({ isVisible : false });
       evt.fire();    
    }
})</pre>	    
	</aura:description>	
		<aura:example name="spinner" ref="auradocs:demoSpinner" label="Using ui:spinner">
    	<p>This example shows a spinner that can be toggled.</p>
	   </aura:example>
	   
	
</aura:documentation>
