<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:documentation>
	<aura:description>
		<p>
			A <code>ui:dataProvider</code> component fetches and returns rows of data to a consuming component, such as <code>ui:list</code>.
		</p>
		<p>
			This component can fetch data in various ways.  It can fire a server action to get rows from a server-side database, or create data in JavaScript and require no server interaction, or even some combination of the two.
		</p>
		<p>
			When a <code>ui:dataProvider</code> component has new data to report (e.g., when a server action has returned), it attaches the relevant data to the <code>ui:dataChanged</code> event.  <code>ui:dataProvider</code>'s helper provides a function <code>fireDataChangeEvent(dataProvider, data)</code> to surface this event.
		</p>
		<p>
			A <code>ui:dataProvider</code> can also be triggered by the wrapping component to provide data, via the <code>ui:dataProvide</code> event.  This event has a <code>parameters</code> attribute that can be used as input to the <code>ui:dataProvider</code>.
			To customize this behavior, set the event handler in the component that extends <code>ui:dataProvider</code> by using the <code>aura:handler</code> tag with the attribute <code>name="provide"</code>.
		</p>
	</aura:description>
	
	<aura:example name="example1" ref="uiExamples:dataProviderExample" label="Using ui:dataProvider">
    	<p>This example shows how to fetch data using <code>ui:dataProvider</code> in a <code>ui:list</code> component. The data provider is represented by the <code>uitest:infiniteDataProvider</code>component, which extends <code>ui:dataProvider</code>.</p>
    	
    	<p>When the list data is initialized, the <code>provide</code> handler is called, which runs the controller-side action. This action sets the callback using the <code>action.setCallback</code> method to return any new data. In the callback, this code attaches the data to the <code>ui:dataChanged</code> event.</p>
    	<p><code>
         data = action.getReturnValue();<br/>helper.fireDataChangeEvent(component, data);
        </code>
		</p>
	</aura:example>
</aura:documentation>