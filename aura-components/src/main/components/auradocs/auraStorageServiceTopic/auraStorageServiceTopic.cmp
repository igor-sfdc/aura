<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extends="auradocs:topicPanel">
    <aura:set attribute="title" value="Storage Service"/>

<p>Aura Storage Service provides a powerful, simple-to-use caching infrastructure for Aura clients. Aura client applications can benefit from caching data to reduce response times of pages by storing and accessing data locally rather than requesting data from the server. This enhances the user experience on the client. Caching is especially beneficial for high-performance, mostly connected applications operating over high latency connections, such as 3G networks.</p>

<p>The advantage of using Aura Storage Service instead of other caching infrastructures, such as Apple local storage for iOS devices, is that Aura Storage Service offers several types of storage through adapters. Storage can be persistent and secure. With persistent storage, cached data is preserved between user sessions in the browser. With secure storage, cached data is encrypted.</p>

<h3>Available Storage Adapters</h3>

<table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Storage Adapter Name</th>
                    <th>Persistent</th>
                    <th>Secure</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>SmartStore</td>
                    <td><code>true</code></td>
                    <td><code>true</code></td>
                </tr>
                <tr>
                    <td>WebSQL</td>
                    <td><code>true</code></td>
                    <td><code>false</code></td>
                </tr>
                <tr>
                    <td>MemoryAdapter</td>
                    <td><code>false</code></td>
                    <td><code>true</code></td>
                </tr>
            </tbody>
    </table>

<h4>SmartStore</h4>
<p>(Persistent and secure) The SmartStore caching service is provided by the Salesforce Mobile SDK and is available only if you have installed the Salesforce Mobile SDK. The Salesforce Mobile SDK enables developing mobile applications that integrate with Salesforce. You can use SmartStore with these mobile applications for caching data. </p>

<h4>WebSQL</h4>
<p>(Persistent but not secure) Provides access to a client-side SQL database.</p>

<h4>MemoryAdapter</h4>
<p>(Not persistent but secure) Provides access to the JavaScript main memory space for caching data. The stored cache persists only per browser page. Browsing to a new page resets the cache. Also, MemoryAdapter provides cache management capabilities. If the memory size limit has been reached, MemoryAdapter removes the least recently used data from the cache to shrink the cache size.</p>

<h3>Storage Adapter Selection</h3>
<p>Aura Storage Service selects a storage adapter on your behalf that matches the  persistent and secure options you specify when initializing the service. For example, if you request a persistent and secure storage service, Aura Storage Service will return the SmartStore storage.</p>

<h3>Storage Types and Options</h3>
<p>There are two types of storage:
<ul>
    <li>Custom named storage: Storage that you control by adding and retrieving items to and from storage.</li>
    <li>Aura-provided actions storage: Storage that is available for client-side and server-side actions that enables caching action response values. For more information, see <auradocs:topicLink topic="storableServerSideActions">Storable Server-Side Actions</auradocs:topicLink>.</li>
</ul>
</p> 

<p>When you initialize Aura storage, you can set certain options, such as the maximum cache size and the default expiration time. The storage name is required and must be specified.</p>

<auradocs:info>The name of Aura storage can be any name except for “actions”, which is reserved for the server action storage that the Aura framework uses.</auradocs:info>

<p>The expiration time for an item in storage specifies the duration after which an item should be replaced with a fresh copy. The refresh interval takes effect only if the item hasn't expired yet and applies to the actions storage only. In that case, if the refresh interval for an item has passed, the item gets refreshed after the same action is called. If stored items have reached their expiration times or have exceeded their refresh intervals, they're replaced only after a call is made to access them and if the client is online.</p>      

    
<p><b>See also:</b><br/>    
    <auradocs:topicLink topic="serverSideControllers">Server-Side Controllers</auradocs:topicLink><br/>
    <auradocs:topicLink topic="storableServerSideActions">Storable Server-Side Actions</auradocs:topicLink><br/>
    <auradocs:topicLink topic="storageInit">Initializing Storable Service</auradocs:topicLink>
</p>
</aura:component>
