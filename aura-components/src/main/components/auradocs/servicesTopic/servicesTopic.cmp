<!--

    Copyright (C) 2013 salesforce.com, inc.

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

            http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<aura:component extends="auradocs:topicPanel">
    <aura:set attribute="title" value="JavaScript Services"/>

    <p> Aura provides a set of client-side services that helps you develop apps faster. 
    You can call these services from your JavaScript code, using the syntax <code>$A.&lt;service&gt;.&lt;method&gt;</code>. 
    For example, use <code>$A.componentService.newComponentAsync()</code> to create a component dynamically. 
    See <auradocs:topicLink topic ="dynamicCmpAsync">Dynamically Creating a Component (Asynchronous)</auradocs:topicLink> for an example of using the component service.</p>
    <p>Here is a list of the services.</p>


    <h3>AuraComponentService</h3>
    <h4><code>$A.componentService</code></h4>
    <p>The component service enables you to create and manage components. You can use the service to create a component on the client or server and access or manipulate component data.</p>
    <p>See Also: <auradocs:referenceTopicLink topic="api:AuraComponentService">Methods</auradocs:referenceTopicLink> | <auradocs:topicLink topic ="dynamicCmp">Dynamically Creating a Component</auradocs:topicLink> | <auradocs:topicLink topic ="valueObjects">Value Objects</auradocs:topicLink></p>

    <h3>AuraDevToolService</h3>
    <h4><code>$A.devToolService</code></h4>
   <p>The dev tool service helps you debug and test in non-production modes by enabling you to query the current state of objects and get statistics about a running app.
      For example, you can get a list of available views using <code>$A.devToolService.views</code>.</p>
   <p>See Also: <auradocs:topicLink topic="modesReference">Modes</auradocs:topicLink> | <auradocs:topicLink topic="queryLang">Querying State and Statistics</auradocs:topicLink></p>

    <h3>AuraEventService</h3>
    <h4><code>$A.eventService</code></h4>
    <p>The event service enables you to create and manage events. For example, you can create a new application event using <code>$A.eventService.newEvent("namespace:component")</code>.</p>
    <p>See Also: <auradocs:referenceTopicLink topic="api:AuraEventService">Methods</auradocs:referenceTopicLink></p>

    <h3>AuraExpressionService</h3>
    <h4><code>$A.expressionService</code></h4>
    <p>The expression service enables you to process expressions against a different value provider. 
       For example, you can use <code>$A.expressionService.getValue(cmp, "<aura:text value="{!" />$Label.Section.Param}").getValue()</code> to evaluate labels before passing them as attributes to locally created components. 
       Use <code>component.get()</code> or <code>$A.get()</code> instead if you are resolving expressions for components and do not require manipulating the actual value object.</p>
    <p>See Also: <auradocs:referenceTopicLink topic="api:AuraExpressionService">Methods</auradocs:referenceTopicLink></p>

    <h3>AuraHistoryService</h3>
    <h4><code>$A.historyService</code></h4>
    <p>The history service enables you to manage browser history and change the location. For example, use <code>$A.historyService.set(location)</code> to add the location to the history service, and use <code>$A.historyService.back()</code>
     or <code>$A.historyService.forward()</code> to load the previous or subsequent URL or layout on the list.</p>
     <auradocs:warning>Internet Explorer 7 and 8 are not supported for this service.</auradocs:warning>
    <p>See Also: <auradocs:referenceTopicLink topic="api:AuraHistoryService">Methods</auradocs:referenceTopicLink></p>

    <h3>AuraLayoutService</h3>
    <h4><code>$A.layoutService</code></h4>
    <p>The layout service enables you to manage the layout and navigation of your app. For example, you can use the <code>changeLocation()</code> method to pass in a new location and extra parameters for the new URL.</p>
    <p>Internet Explorer 7 and 8 are not supported for this service.</p>    
    <p>See Also: <auradocs:referenceTopicLink topic="api:AuraLayoutService">Methods</auradocs:referenceTopicLink> | <auradocs:topicLink topic="layouts">Using Layouts</auradocs:topicLink></p>

	<h3>AuraLocalizationService</h3>
	<h4><code>$A.localizationService</code></h4>
	<p>The localization service enables you to manage the localization of date and time. For example, <code>$A.localizationService.parseDateTime(value, "yyyy-MM-dd");</code> parses the datetime value in the given format and returns a JavaScript Date object.</p>
	<p>See Also: <auradocs:referenceTopicLink topic="api:AuraLocalizationService">Methods</auradocs:referenceTopicLink></p>
	
    <h3>AuraRenderingService</h3>
    <h4><code>$A.renderingService</code></h4>
    <p>The rendering service renders components by retrieving and calling their specific renderers. You can override the default rendering behavior in a client-side renderer.</p>
    <p>See Also: <auradocs:referenceTopicLink topic="api:AuraExpressionService">Methods</auradocs:referenceTopicLink> | <auradocs:topicLink topic="renderers">Using Renderers</auradocs:topicLink></p>

    <h3>AuraStorageService</h3>
    <h4><code>$A.storageService</code></h4>
    <p>The storage service provides a caching infrastructure for data storage on the client.</p>
    <p>See Also: <auradocs:topicLink topic="auraStorageService">Aura Storage Service</auradocs:topicLink> |
    <auradocs:referenceTopicLink topic="api:AuraStorageService">Methods</auradocs:referenceTopicLink></p>

    <!--TODO: W-1403508 AuraStorageService-->

    </aura:component>